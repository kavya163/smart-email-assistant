(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["countWordsOccurrence"] = factory();
	else
		root["countWordsOccurrence"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

	var isLengthMoreThan = function isLengthMoreThan(minLength) {
	  return function (x) {
	    return x.length > minLength;
	  };
	};
	var isNotEmpty = function isNotEmpty(x) {
	  return !!x;
	};

	exports.default = function (input) {
	  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	      _ref$caseSensitive = _ref.caseSensitive,
	      caseSensitive = _ref$caseSensitive === undefined ? false : _ref$caseSensitive,
	      _ref$minLength = _ref.minLength,
	      minLength = _ref$minLength === undefined ? 2 : _ref$minLength,
	      _ref$predicates = _ref.predicates,
	      predicates = _ref$predicates === undefined ? [] : _ref$predicates;

	  var applyPredicates = [isNotEmpty, isLengthMoreThan(minLength)].concat(_toConsumableArray(predicates));

	  var inputWithoutPadding = input.trim();

	  return (caseSensitive ? inputWithoutPadding : inputWithoutPadding.toLowerCase()).split(/\s+/).filter(function (x) {
	    return applyPredicates.every(function (predicate) {
	      return predicate(x);
	    });
	  }).reduce(function (acc, word) {
	    var count = acc[word] || 0;

	    return _extends({}, acc, _defineProperty({}, word, count + 1));
	  }, {});
	};

/***/ }
/******/ ])
});
;